name: Run tests
on:
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
jobs:
  run-tests:
    # if: false
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 3

    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v2

      - name: Get Playwright version
        id: pw-version
        run: |
          PW_VERSION=$(jq -r '.devDependencies["@playwright/test"] // .dependencies["@playwright/test"]' package.json)
          echo "PW_VERSION=$PW_VERSION" >> "$GITHUB_ENV"

      - name: Cache Playwright browsers
        id: pw-cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: ${{ runner.os }}-pw-${{ env.PW_VERSION }}
          restore-keys: |
            ${{ runner.os }}-pw-   # fall back to *any* Playwright version for the OS

      - name: Setup application
        run: bun install
      - name: Install Chromium for Playwright
        # if: steps.pw-cache.outputs.cache-hit != 'true'
        run: npx playwright install --with-deps chromium

      - name: Start backend and frontend
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          APP_URL: http://0.0.0.0:8080
          API_URL: http://0.0.0.0:3333
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          NEXT_PUBLIC_API_URL: http://0.0.0.0:3333
        timeout-minutes: 3
        run: |
          bun run migrate:db
          bun run start:backend &
          bun run build:frontend --turbo
          bun run start:frontend &
          bunx wait-on http://localhost:3333/v1/health http://0.0.0.0:8080/

      - name: Run tests
        run: npm run test
        env:
          BASE_URL: http://0.0.0.0:8080
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          APP_URL: http://0.0.0.0:8080
          API_URL: http://0.0.0.0:3333
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          NEXT_PUBLIC_API_URL: http://0.0.0.0:3333

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: packages/e2e/playwright-report/
          retention-days: 30
